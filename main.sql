CREATE DATABASE swp391_db_releasee;

USE swp391_db_releasee;

SET FOREIGN_KEY_CHECKS = 0;
-- DROP DATABASE swp391_db_releasee;

DROP TABLE IF EXISTS t05_role;
CREATE TABLE t05_role (
   C05_ROLE_ID INT PRIMARY KEY,
   C05_ROLE_DESC ENUM('STUDENT', 'PARENT', 'TEACHER', 'MANAGER', 'ADMIN') NOT NULL
);

DROP TABLE IF EXISTS t14_user;
CREATE TABLE t14_user (
    C14_USER_ID INT AUTO_INCREMENT PRIMARY KEY,
    C14_USER_USERNAME VARCHAR(50) NOT NULL UNIQUE,
    C14_USER_PASSWORD VARCHAR(255) NOT NULL,
    C14_ACC_STATUS BIT(1) NOT NULL, -- lock/unlock
    C14_USER_CODE INT NOT NULL UNIQUE,
    C14_USER_NAME VARCHAR(50) NOT NULL,
    C14_USER_PHONE VARCHAR(50) NOT NULL,
    C14_USER_ADDRESS VARCHAR(100) NOT NULL,
    C14_USER_DOB DATE NOT NULL,
    C14_USER_GENDER BIT(1) NOT NULL, -- male/female
    C14_USER_EMAIL VARCHAR(50) NOT NULL UNIQUE,
    C14_VERIFICATION_CODE VARCHAR(255) DEFAULT(NULL),
    C14_PROFILE_IMAGE VARCHAR(255) NOT NULL DEFAULT('file path'),
    C14_ROLE_ID INT NOT NULL,
    C14_PARENT_ID INT,
    CONSTRAINT FK_USER_ROLE FOREIGN KEY (C14_ROLE_ID) REFERENCES t05_role(C05_ROLE_ID),
    CONSTRAINT FK_USER_PARENT FOREIGN KEY (C14_PARENT_ID) REFERENCES t14_user(C14_USER_ID)
);

DROP TABLE IF EXISTS t13_subject;
CREATE TABLE t13_subject (
    C13_SUBJECT_ID INT AUTO_INCREMENT PRIMARY KEY,
    C13_SUBJECT_NAME VARCHAR(50) NOT NULL UNIQUE,
    C13_SUBJECT_DESC TEXT NOT NULL
);

DROP TABLE IF EXISTS t03_center;
CREATE TABLE t03_center (
    C03_CENTER_ID INT AUTO_INCREMENT PRIMARY KEY,
    C03_CENTER_CODE INT NOT NULL UNIQUE,
    C03_CENTER_NAME VARCHAR(50) NOT NULL,
    C03_CENTER_DESC TEXT NOT NULL,
    C03_CENTER_ADDRESS VARCHAR(50) NOT NULL,
    C03_CENTER_PHONE VARCHAR(50) NOT NULL,
    C03_CENTER_EMAIL VARCHAR(50) NOT NULL,
    C03_CENTER_REGULATIONS TEXT NOT NULL,
    C03_CREATED_AT DATE DEFAULT(CURRENT_TIMESTAMP) NOT NULL,
    C03_IMAGE_PATH TEXT NOT NULL,
    C03_MANAGER_ID INT NOT NULL,
    CONSTRAINT FK_CENTER_MANAGER FOREIGN KEY (C03_MANAGER_ID) REFERENCES t14_user(C14_USER_ID)
);

DROP TABLE IF EXISTS t01_COURSE;
CREATE TABLE t01_COURSE (
   C01_COURSE_ID INT AUTO_INCREMENT PRIMARY KEY,
   C01_COURSE_NAME VARCHAR(50) NOT NULL,
   C01_COURSE_CODE INT NOT NULL UNIQUE,
   C01_COURSE_DESC TEXT NOT NULL,
   C01_COURSE_START_DATE DATE NOT NULL,
   C01_COURSE_END_DATE DATE NOT NULL,
   C01_AMOUNT_OF_STUDENTS INT NOT NULL,
   C01_COURSE_FEE FLOAT NOT NULL,
   C01_CENTER_ID INT NOT NULL,
   C01_SUBJECT_ID INT NOT NULL,
   C01_TEACHER_ID INT NOT NULL,
   CONSTRAINT T01_CK_DATE CHECK (C01_COURSE_END_DATE >= C01_COURSE_START_DATE),
   CONSTRAINT FK_COURSE_CENTER FOREIGN KEY (C01_CENTER_ID) REFERENCES t03_center(C03_CENTER_ID),
   CONSTRAINT FK_COURSE_SUBJECT FOREIGN KEY (C01_SUBJECT_ID) REFERENCES t13_subject(C13_SUBJECT_ID),
   CONSTRAINT FK_COURSE_TEACHER FOREIGN KEY (C01_TEACHER_ID) REFERENCES t14_user(C14_USER_ID) -- must be teacher
);

DROP TABLE IF EXISTS t18_room;
CREATE TABLE t18_room (
     C18_ROOM_ID INT AUTO_INCREMENT PRIMARY KEY,
     C18_STATUS BIT(1) NOT NULL, -- tự ràng buộc: trống/ ko trống
     C18_CENTER_ID INT NOT NULL,
     CONSTRAINT FK_ROOM_CENTER FOREIGN KEY (C18_CENTER_ID) REFERENCES t03_center(C03_CENTER_ID)
);

DROP TABLE IF EXISTS t02_slot;
CREATE TABLE t02_slot (
    C02_SLOT_ID INT AUTO_INCREMENT PRIMARY KEY,    
    C02_SLOT_DATE DATE NOT NULL,
    C02_SLOT_START_TIME TIME NOT NULL,
    C02_SLOT_END_TIME TIME NOT NULL, 
    C02_COURSE_ID INT NOT NULL, -- LẤY THÔNG TIN TEACHER Ở BẢNG COURSE !
    C02_TEACHER_ID INT NOT NULL,
    C02_SUBJECT_ID INT NOT NULL,
    C02_ROOM_ID INT NOT NULL, -- thành FK --> đưa qua bảng room
    CONSTRAINT T02_CK_TIME CHECK (C02_SLOT_END_TIME > C02_SLOT_START_TIME),
    CONSTRAINT FK_SLOT_COURSE FOREIGN KEY (C02_COURSE_ID) REFERENCES t01_COURSE(C01_COURSE_ID),
    CONSTRAINT FK_SLOT_TEACHER FOREIGN KEY (C02_TEACHER_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT FK_SLOT_SUBJECT FOREIGN KEY (C02_SUBJECT_ID) REFERENCES t13_subject(C13_SUBJECT_ID),
    CONSTRAINT FK_SLOT_ROOM FOREIGN KEY (C02_ROOM_ID) REFERENCES t18_room(C18_ROOM_ID)
);

select * from t02_slot;

-- user là student/teacher
DROP TABLE IF EXISTS t06_feedback;
CREATE TABLE t06_feedback (
    C06_FEEDBACK_ID INT AUTO_INCREMENT PRIMARY KEY,
    C06_FEEDBACK_DESC TEXT NOT NULL,
    C06_USER_ID INT NOT NULL,
    C06_SEND_TO VARCHAR(50) NOT NULL, -- dùng email 
    CONSTRAINT FK_FEEDBACK_USER FOREIGN KEY (C06_USER_ID) REFERENCES t14_user(C14_USER_ID)
);

-- user phải là teacher
DROP TABLE IF EXISTS t07_material;
CREATE TABLE t07_material (
    C07_MATERIALS_ID INT AUTO_INCREMENT PRIMARY KEY,
    C07_MATERIALS_NAME VARCHAR(100) NOT NULL,
    C07_TEACHER_ID INT NOT NULL,
    C07_SUBJECT_ID INT NOT NULL,
    CONSTRAINT FK_MATERIAL_TEACHER FOREIGN KEY (C07_TEACHER_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT FK_MATERIAL_SUBJECT FOREIGN KEY (C07_SUBJECT_ID) REFERENCES t13_subject(C13_SUBJECT_ID)
);

-- user là học sinh
DROP TABLE IF EXISTS t09_attendance;
CREATE TABLE t09_attendance (
    C09_ATTENDANCE_ID INT AUTO_INCREMENT PRIMARY KEY,
    C09_ATTENDANCE_STATUS BIT(1) NOT NULL,
    C09_STUDENT_ID INT NOT NULL,
    C09_SLOT_ID INT NOT NULL,
    CONSTRAINT CK UNIQUE(C09_STUDENT_ID, C09_SLOT_ID),
    CONSTRAINT FK_ATTENDANCE_STUDENT FOREIGN KEY (C09_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT FK_ATTENDANCE_SLOT FOREIGN KEY (C09_SLOT_ID) REFERENCES t02_SLOT(C02_SLOT_ID)
);

-- user là học sinh
DROP TABLE IF EXISTS t10_result;
CREATE TABLE t10_result (
    C10_RESULT_ID INT AUTO_INCREMENT PRIMARY KEY,
    C10_RESULT_TYPE INT NOT NULL, -- hệ số điểm: x1, x2, x3
    C10_RESULT_VAL INT NOT NULL,
    C10_STUDENT_ID INT NOT NULL,
    C10_COURSE_ID INT NOT NULL,
    CONSTRAINT FK_RESULT_STUDENT FOREIGN KEY (C10_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
    CONSTRAINT FK_RESULT_COURSE FOREIGN KEY (C10_COURSE_ID) REFERENCES t01_COURSE(C01_COURSE_ID)
);

-- actor là admin/ manager
-- 0: notification, --> false
-- 1: post          --> true

-- C11_MEDIA_STATUS
-- + Mặc định là 0 --> chưa được duyệt --> chuyển đến admin
--   ADMIN: + duyệt --> SET C11_MEDIA_STATUS thành 1
--          + ko duyệt --> xóa bay luôn khỏi database --> gửi thông báo về lại manager
DROP TABLE IF EXISTS t11_manager_admin_media;
CREATE TABLE t11_manager_admin_media (
    C11_ID INT AUTO_INCREMENT PRIMARY KEY,
    C11_TITLE VARCHAR(100) NOT NULL,
    C11_CONTENT TEXT NOT NULL,
    C11_TYPE BIT(1) NOT NULL, -- phân loại là POST/ NOTIFICATION
    C11_MEDIA_STATUS BIT(1) DEFAULT(0),
    C11_PUBLISHED_DATE DATETIME NOT NULL,
    C11_SEND_TO VARCHAR(50) NOT NULL DEFAULT 'All', -- email
    C11_FILE_PATH VARCHAR(255),
    C11_ACTOR_ID INT NOT NULL, -- admin/ manager
    CONSTRAINT FK_MEDIA_ACTOR FOREIGN KEY (C11_ACTOR_ID) REFERENCES t14_user(C14_USER_ID)
);
SELECT * FROM t11_manager_admin_media;
 
-- n-n: course - student
DROP TABLE IF EXISTS t15_enrollment; 
CREATE TABLE t15_enrollment (
     C15_ENROLLMENT_ID INT AUTO_INCREMENT PRIMARY KEY,
     C15_STUDENT_ID INT NOT NULL,
     C15_COURSE_ID INT NOT NULL,
     CONSTRAINT CK_T15_FK UNIQUE(C15_STUDENT_ID, C15_COURSE_ID),
     CONSTRAINT FK_ENROLLMENT_STUDENT FOREIGN KEY (C15_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_ENROLLMENT_COURSE FOREIGN KEY (C15_COURSE_ID) REFERENCES t01_COURSE(C01_COURSE_ID)
);

-- n-n: center - student, center - teacher
-- role in user table <student or teacher>!! 
DROP TABLE IF EXISTS t16_user_center; 
CREATE TABLE t16_user_center (
     C16_USER_CENTER_ID INT AUTO_INCREMENT PRIMARY KEY,
     C16_USER_ID INT NOT NULL, 
     C16_CENTER_ID INT NOT NULL,
     CONSTRAINT CK_T16_FK UNIQUE(C16_USER_ID, C16_CENTER_ID),
     CONSTRAINT FK_T16_USER FOREIGN KEY (C16_USER_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_T16_CENTER FOREIGN KEY (C16_CENTER_ID) REFERENCES t03_center(C03_CENTER_ID)
);

-- n-n: 1 student học nhiều slot, 1 slot có nhiều student
DROP TABLE IF EXISTS t17_student_slot; 
CREATE TABLE t17_student_slot (
     C17_STUDENT_SLOT_ID INT AUTO_INCREMENT PRIMARY KEY,
     C17_STUDENT_ID INT NOT NULL,
     C17_SLOT_ID INT NOT NULL,
     CONSTRAINT CK_T17_FK UNIQUE(C17_STUDENT_ID, C17_SLOT_ID),
     CONSTRAINT FK_T17_STUDENT FOREIGN KEY (C17_STUDENT_ID) REFERENCES t14_user(C14_USER_ID),
     CONSTRAINT FK_T17_SLOT FOREIGN KEY (C17_SLOT_ID) REFERENCES t02_slot(C02_SLOT_ID)
);

SET FOREIGN_KEY_CHECKS = 1;